/*Source https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes */
  body {
   font: 24px Arial, Helvetica;
   /* background: #999999;*/
   background:#ffffff;
   color: #333366;
  }

  #main {
   min-height: 800px;
   margin: 0px;
   padding: 0px;
   display: -webkit-flex;
   display:         flex;
   -webkit-flex-flow: row;
           flex-flow: row;
   }
 
  #main > article {
   margin: 4px;
   padding: 5px;
   border: 1px solid #cccc33;
   border-radius: 7pt;
   background: #dddd88;
   -webkit-flex: 3 1 60%;
           flex: 3 1 60%;
   -webkit-order: 2;
           order: 2;
   }
  
  #main > nav {
   margin: 4px;
   padding: 5px;
   border: 1px solid #8888bb;
   border-radius: 7pt;
   background: #ccccff;
   -webkit-flex: 1 6 20%;
           flex: 1 6 20%;
   -webkit-order: 1;
           order: 1;
   }
  
  #main > aside {
   margin: 4px;
   padding: 5px;
   border: 1px solid #8888bb;
   border-radius: 7pt;
   background: #ccccff;
   -webkit-flex: 1 6 20%;
           flex: 1 6 20%;
   -webkit-order: 3;
           order: 3;
   }
 /*removed header from the footer styling below */
  footer {
   display: block;
   margin: 4px;
   padding: 5px;
   /* min-height: 100px; */
   /* take away the min-height and the text overruns */
  height: auto;
   border: 1px solid #eebb55;
   border-radius: 7pt;
   /*background: #ffeebb;*/
   background: #ffffff;
   }
 
  /* Too narrow to support three columns */
  @media all and (max-width: 640px) {
  
   #main, #page {
    -webkit-flex-flow: column;
            flex-direction: column;
   }

   #main > article, #main > nav, #main > aside {
    /* Return them to document order */
    -webkit-order: 0;
            order: 0;
   }
  
   #main > nav, #main > aside, header, footer {
    min-height: 50px;
    max-height: 50px;
   }
  }
   .flex
   {
      /* basic styling */
      width: 350px;
      height: 200px;
      border: 1px solid #555;
      font: 14px Arial;

      /* flexbox setup */
      display: -webkit-flex;
      -webkit-flex-direction: row;

      display: flex;
      flex-direction: row;
   }
   
    .flex > div
   {
      -webkit-flex: 1 1 auto;
      flex: 1 1 auto;

      width: 30px; /* To make the transition work nicely.  (Transitions to/from
                      "width:auto" are buggy in Gecko and Webkit, at least.
                      See http://bugzil.la/731886 for more info.) */

      -webkit-transition: width 0.7s ease-out;
      transition: width 0.7s ease-out;
   }

   /* colors */
   .flex > div:nth-child(1){ background : #009246; }
   .flex > div:nth-child(2){ background : #F1F2F1; }
   .flex > div:nth-child(3){ background : #CE2B37; }

   .flex > div:hover
   {
        width: 200px;
   }
  
  /* Below from CSS-tricks */
  /* https://css-tricks.com/snippets/css/a-guide-to-flexbox/ last accessed July 2015 */
  .flex-container {
  /* We first create a flex layout context */
  display: flex;
  
  /* Then we define the flow direction and if we allow the items to wrap 
   * Remember this is the same as:
   * flex-direction: row;
   * flex-wrap: wrap;
   */
  flex-flow: row wrap;
  
  /* Then we define how is distributed the remaining space */
  justify-content: space-around;
}
/* Adding just the flex-container seems to accomplish only the same thing that width in percentages obtains */

   /*Below for Gitter a11y Slackers */
   .iframe-region {
     /* height:100%; */
     height:300px;
     position:relative;
     -webkit-box-flex:1;
     -webkit-flex-grow:1;
     -ms-flex-positive:1;
     flex-grow:1
     
   }
/* for styling metadata example */
dd, dt, dl {
  font: 12px Arial, Helvetica;
}
/* from http://bennettfeely.com/flexplorer/ */
.flex-container {
	display: -webkit-flex;
	display: flex;
	-webkit-flex-flow: row wrap;
	flex-flow: row wrap;
}

.flex-item {
	-webkit-flex: 1 auto;
	flex: 1 auto;
}
#flextbox1 {
	 display:flex;
}
#flexbox2 {
	display:inline-flexbox;
}  
#flexbox3 {
	display: flex;
  	flex-flow: row wrap;
  	width: 300px;
  	flex: auto;
}

.flexbox3item {
  width: 80px;
}
  
